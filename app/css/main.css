/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }
  blockquote:before, blockquote:after, q:before, q:after {
    content: '';
    content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

*, *:before, *:after {
  box-sizing: border-box; }

@media (max-width: 768px) {
  html {
    font-size: 10px;
    line-height: 15px; } }

@media (min-width: 768px) {
  html {
    font-size: 12px;
    line-height: 18px; } }

@media (min-width: 992px) {
  html {
    font-size: 14px;
    line-height: 21px; } }

@media (min-width: 1200px) {
  html {
    font-size: 16px;
    line-height: 24px; } }

h1 {
  font-size: 5.063rem; }

h2 {
  font-size: 3.375rem; }

h3 {
  font-size: 2.25rem; }

h4 {
  font-size: 1.5rem; }

h5 {
  font-size: 0.667rem; }

h6 {
  font-size: 0.444rem; }

h1,
h2,
h3,
h4,
h5,
h6 {
  text-align: center;
  font-family: sans-serif;
  line-height: 1.5; }

p {
  font-family: sans-serif; }

/*# sourceMappingURL=data:application/json;base64, */
